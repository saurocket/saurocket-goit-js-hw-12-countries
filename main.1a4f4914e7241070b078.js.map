{"version":3,"sources":["webpack:///./fetchCountries.js","webpack:///./Component/Card.js","webpack:///./Component/CreateTable.js","webpack:///./Component/onCheckedCountry.js","webpack:///./index.js","webpack:///./Component/swapAlert.js"],"names":["fetchCountries","name","fetch","response","json","data","ok","Error","message","card","element","rootCard","document","querySelector","innerHTML","languages","population","capital","flag","cardBody","map","item","join","itemCard","createElement","classList","add","style","insertAdjacentHTML","append","createTable","elemets","rootList","Array","isArray","length","arrElemetns","rootUl","listCountiest","querySelectorAll","forEach","counry","addEventListener","e","target","contains","remove","findElement","find","elem","textContent","onCheckedCountry","rootLeft","rootRight","debounce","value","then","res","catch","err","Swal","fire","icon","title","text"],"mappings":"qTAEO,IAAMA,EAAc,e,EAAA,G,EAAA,yBAAI,WAAOC,GAAP,wGACPC,MAAM,yCAAyCD,GADxC,cACzBE,EADyB,gBAEVA,EAASC,OAFC,UAEvBC,EAFuB,OAGxBF,EAASG,GAHe,sBAIrB,IAAIC,MAAMF,EAAKG,SAAW,mBAJL,gCAMtBH,GANsB,0C,+KAAJ,sD,qBCAdI,G,kDAAO,SAACC,GACnB,IAAMC,EAAUC,SAASC,cAAc,UACvCF,EAASG,UAAY,GAFU,MAMsBJ,EAAQ,GAAtDT,EANwB,EAMxBA,KAAMc,EANkB,EAMlBA,UAAWC,EANO,EAMPA,WAAYC,EANL,EAMKA,QAASC,EANd,EAMcA,KAKvCC,EAAW,qRAIuDF,EAJ1D,0MAO0DD,EAP1D,6NAFWD,EAAUK,KAAI,SAAAC,GAAI,aAAWA,EAAKpB,KAAhB,WAA6BqB,KAAK,IAE/D,sOAgB+BJ,EAhB/B,0GAoBRK,EAAWX,SAASY,cAAc,OACxCD,EAASE,UAAUC,IAAI,QACvBH,EAASE,UAAUC,IAAI,SACvBH,EAASI,MAAQ,oBACjBJ,EAAST,UAAT,2BAAgDb,EAAhD,QACAsB,EAASK,mBAAmB,YAAaT,GAEzCR,EAASkB,OAAON,KCpCLO,G,UAAc,SAACC,GAC1B,IAAMC,EAAUpB,SAASC,cAAc,UAKxC,GAFCmB,EAASlB,UAAY,MAEjBmB,MAAMC,QAAQH,GAAU,KAAO,kBAEnC,GAAIA,EAAQI,OAAO,EAAE,CACnB,IAAMC,EAAeL,EAAQX,KAAI,SAAAV,GAC/B,qCAAsCA,EAAQT,KAA9C,WACCqB,KAAK,IAEFe,EAASzB,SAASY,cAAc,MACtCa,EAAOZ,UAAUC,IAAI,cAErBW,EAAOvB,UAAYsB,EACnBJ,EAASH,OAAOQ,GAEhB,IAAMC,EAAgB1B,SAAS2B,iBAAiB,2BAEhDD,EAAcE,SAAQ,SAAAC,GAAM,OAAIA,EAAOC,iBAAiB,SACtD,SAACC,GAAD,OCvB0B,SAACA,EAAGjC,EAAS4B,EAAcP,GACzD,GAAqC,qBAAhCY,EAAEC,OAAOnB,UAAUoB,SAAxB,CAGAP,EAAcE,SAAQ,SAAAnB,GAAI,OAAIA,EAAKI,UAAUqB,OAAO,aACpDpC,EAAQe,UAAUC,IAAI,UAEtB,IAAMqB,EAAchB,EAAQiB,MAAK,SAAAC,GAAI,OAAIA,EAAKhD,OAAS0C,EAAEC,OAAOM,eAChEzC,EAAK,CAACsC,KDeGI,CAAiBR,EAAEF,EAAOH,EAAeP,SAI5B,IAAnBA,EAAQI,QACT1B,EAAKsB,KExBHqB,EAAUxC,SAASC,cAAc,UACjCwC,EAAWzC,SAASC,cAAc,UAExBD,SAASC,cAAc,oBACtBD,SAASC,cAAc,YA8B/B6B,iBACP,QACAY,KA9Bc,SAACX,GACf3C,EAAe2C,EAAEC,OAAOW,OAAOC,MAAK,SAAAC,GAClCL,EAAStC,UAAY,GACrBuC,EAAUvC,UAAY,GAClB2C,EAAItB,OAAS,GAClBL,EAAY2B,MAGVC,OAAM,SAACC,GACN,GAAoB,iCAAhBA,EAAInD,QAGN,OAFA4C,EAAStC,UAAY,QACrBuC,EAAUvC,UAAY,ICrBL,IAACN,IDwBVmD,EAAInD,QCrBlBoD,IAAKC,KAAK,CACRC,KAAM,QACNC,MAAO,uBACPC,KAAM,4BAA4BxD,SDkClB,Q","file":"main.1a4f4914e7241070b078.js","sourcesContent":["\r\n\r\nexport const fetchCountries =  async (name) => {\r\n  let response = await  fetch(`https://restcountries.eu/rest/v2/name/${name}`)\r\n  const data = await response.json()\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Something wrong')\r\n  }\r\n  return data\r\n}\r\n","\r\n\r\nexport const card = (element) => {\r\n  const rootCard= document.querySelector('#root2')\r\n  rootCard.innerHTML = ''\r\n\r\n\r\n\r\n  const {name, languages, population, capital, flag} = element[0]\r\n\r\n\r\n  const languageElemetns = languages.map(item => `<li>${item.name}</li>`).join('')\r\n\r\n  const cardBody = `<div class=\"row g-0\">\r\n                            <div class=\"col-md-8\">\r\n                                <div class=\"card-body\">\r\n                                    <h4 class=\"card-title\">Capital -\r\n                                            <small class=\"text-primary\">${capital}</small>\r\n                                    </h4>\r\n                                     <h3 class=\"card-title\">Population -\r\n                                            <small class=\"text-primary\">${population}</small>\r\n                                    </h3>\r\n                                          <h3>Language:</h3>\r\n                                         <ul>\r\n                                                        ${languageElemetns}\r\n                                         </ul>\r\n                                </div>\r\n                            </div>\r\n                                <div class=\"col-md-4\">\r\n                                    <img src=${flag} alt=\"flag\"  width=\"100%\">\r\n                                 </div>\r\n                            </div>`\r\n\r\n  const itemCard = document.createElement('div');\r\n  itemCard.classList.add('card')\r\n  itemCard.classList.add('md-12')\r\n  itemCard.style = 'max-width: 540px;'\r\n  itemCard.innerHTML = `<h2 class=\"text-center\">${name}</h2>`\r\n  itemCard.insertAdjacentHTML('beforeend', cardBody)\r\n\r\n  rootCard.append(itemCard)\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","import { card } from './Card';\r\nimport { onCheckedCountry } from './onCheckedCountry';\r\n\r\n\r\nexport const createTable = (elemets) => {\r\n  const rootList= document.querySelector('#root1')\r\n\r\n\r\n  rootList.innerHTML = null\r\n\r\n if (!Array.isArray(elemets)) throw ('Something wrong')\r\n\r\n  if (elemets.length>1){\r\n    const arrElemetns =  elemets.map(element => {\r\n      return `<li class=\"list-group-item\">${element.name}</li>`\r\n    }).join('')\r\n\r\n    const rootUl = document.createElement('ul')\r\n    rootUl.classList.add('list-group')\r\n\r\n    rootUl.innerHTML = arrElemetns\r\n    rootList.append(rootUl)\r\n\r\n    const listCountiest = document.querySelectorAll('#root1 .list-group-item')\r\n\r\n    listCountiest.forEach(counry => counry.addEventListener('click',\r\n      (e)=>onCheckedCountry(e,counry,listCountiest, elemets))\r\n    )\r\n\r\n  }\r\n  if(elemets.length === 1){\r\n    card(elemets)\r\n  }\r\n}\r\n","import { card } from './Card';\r\n\r\n\r\nexport const onCheckedCountry = (e, element, listCountiest,elemets) => {\r\n  if (!e.target.classList.contains === 'list-group-item'){\r\n    return\r\n  }\r\n  listCountiest.forEach(item => item.classList.remove('active'))\r\n  element.classList.add('active')\r\n\r\n  const findElement = elemets.find(elem => elem.name === e.target.textContent)\r\n  card([findElement])\r\n}\r\n","import './styles.scss';\nimport debounce from 'lodash/debounce';\nimport {fetchCountries} from './fetchCountries'\nimport {swalAlert} from './Component/swapAlert';\nimport { createTable } from './Component/CreateTable';\n\n\nconst rootLeft= document.querySelector('#root1')\nconst rootRight= document.querySelector('#root2')\n\nconst formRef = document.querySelector('#wrapper_country')\nconst inputRef = document.querySelector('#country')\n\nconst onInput = (e) => {\n  fetchCountries(e.target.value).then(res => {\n    rootLeft.innerHTML = ''\n    rootRight.innerHTML = ''\n    if (res.length > 0) {\n   createTable(res)\n    }\n  })\n    .catch((err) => {\n      if (err.message === 'Unexpected end of JSON input'){\n        rootLeft.innerHTML = ''\n        rootRight.innerHTML = ''\n        return\n      }\n      swalAlert(err.message)\n\n\n  })\n\n}\n\n\n\n\n\n\n\n\ninputRef.addEventListener(\n  'input',\n  debounce(onInput, 500),\n);\n\n","import Swal from \"sweetalert2\";\r\n\r\n\r\nexport const swalAlert = (message) => {\r\n\r\n\r\n  Swal.fire({\r\n    icon: 'error',\r\n    title: 'Country is not found',\r\n    text: `Something went wrong! -  ${message}`,\r\n  })\r\n}\r\n"],"sourceRoot":""}
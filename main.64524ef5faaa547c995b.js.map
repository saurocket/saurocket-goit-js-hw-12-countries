{"version":3,"sources":["webpack:///./fetchCountries.js","webpack:///./Component/Card.js","webpack:///./Component/ElemetnsList.js","webpack:///./Component/onCheckedCountry.js","webpack:///./Component/Pagitanation.js","webpack:///./Component/onChangePapge.js","webpack:///./Component/clearPaginator.js","webpack:///./index.js","webpack:///./Component/CreateTable.js","webpack:///./Component/swapAlert.js"],"names":["fetchCountries","name","fetch","response","json","data","ok","Error","message","card","element","rootCard","document","querySelector","innerHTML","languages","population","capital","flag","cardBody","map","item","join","itemCard","createElement","classList","add","style","insertAdjacentHTML","append","elementsList","elements","rootList","arrElemetns","rootUl","listCountiest","querySelectorAll","forEach","counry","addEventListener","e","elemets","target","contains","remove","findElement","find","elem","textContent","onCheckedCountry","root","pagination","slice","navNode","parentNode","removeChild","wrapperPagination","Array","Math","ceil","length","fill","index","pagesRef","arr","PORTION_PAGES","page","start","parseInt","end","pageShowArr","onChangePages","clearPaginator","rootLeft","rootRight","debounce","value","trim","then","res","isArray","createTable","catch","err","Swal","fire","icon","title","text"],"mappings":"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","file":"main.64524ef5faaa547c995b.js","sourcesContent":["\r\n\r\nexport const fetchCountries =  async (name) => {\r\n  let response = await  fetch(`https://restcountries.eu/rest/v2/name/${name}`)\r\n  const data = await response.json()\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Something wrong')\r\n  }\r\n  return data\r\n}\r\n","\r\n\r\nexport const card = (element) => {\r\n  const rootCard= document.querySelector('#root2')\r\n  rootCard.innerHTML = ''\r\n\r\n\r\n\r\n  const {name, languages, population, capital, flag} = element[0]\r\n\r\n\r\n  const languageElemetns = languages.map(item => `<li>${item.name}</li>`).join('')\r\n\r\n  const cardBody = `<div class=\"row g-0\">\r\n                            <div class=\"col-md-8\">\r\n                                <div class=\"card-body\">\r\n                                    <h4 class=\"card-title\">Capital -\r\n                                            <small class=\"text-primary\">${capital}</small>\r\n                                    </h4>\r\n                                     <h3 class=\"card-title\">Population -\r\n                                            <small class=\"text-primary\">${population}</small>\r\n                                    </h3>\r\n                                          <h3>Language:</h3>\r\n                                         <ul>\r\n                                                        ${languageElemetns}\r\n                                         </ul>\r\n                                </div>\r\n                            </div>\r\n                                <div class=\"col-md-4\">\r\n                                    <img src=${flag} alt=\"flag\"  width=\"100%\">\r\n                                 </div>\r\n                            </div>`\r\n\r\n  const itemCard = document.createElement('div');\r\n  itemCard.classList.add('card')\r\n  itemCard.classList.add('md-12')\r\n  itemCard.style = 'max-width: 540px;'\r\n  itemCard.innerHTML = `<h2 class=\"text-center\">${name}</h2>`\r\n  itemCard.insertAdjacentHTML('beforeend', cardBody)\r\n\r\n  rootCard.append(itemCard)\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","import { onCheckedCountry } from './onCheckedCountry';\r\n\r\nexport const elementsList = (elements, rootList) => {\r\n\r\n\r\n  const arrElemetns =  elements.map(element => {\r\n    return `<li class=\"list-group-item\">${element.name}</li>`\r\n  }).join('')\r\n\r\n  const rootUl = document.createElement('ul')\r\n  rootUl.classList.add('list-group')\r\n\r\n  rootUl.innerHTML = arrElemetns\r\n  rootList.append(rootUl)\r\n\r\n  const listCountiest = document.querySelectorAll('#root1 .list-group-item')\r\n\r\n  listCountiest.forEach(counry => counry.addEventListener('click',\r\n    (e)=>onCheckedCountry(e,counry,listCountiest, elements))\r\n  )\r\n\r\n\r\n\r\n}\r\n","import { card } from './Card';\r\n\r\n\r\nexport const onCheckedCountry = (e, element, listCountiest,elemets) => {\r\n  if (!e.target.classList.contains === 'list-group-item'){\r\n    return\r\n  }\r\n  listCountiest.forEach(item => item.classList.remove('active'))\r\n  element.classList.add('active')\r\n\r\n  const findElement = elemets.find(elem => elem.name === e.target.textContent)\r\n  card([findElement])\r\n}\r\n","import { onChangePages } from './onChangePapge';\r\nimport { elementsList } from './ElemetnsList';\r\n\r\n\r\nconst PORTION_PAGES = 10\r\nconst root = document.querySelector('#root')\r\n\r\nexport const pagination = (elemets, rootList) => {\r\n  elementsList(elemets.slice(0, PORTION_PAGES), rootList)\r\n  const navNode = root.querySelector('.county_paginator')\r\n  if (navNode){\r\n    navNode.parentNode.removeChild(navNode)\r\n  }\r\n  const pages = new Array(Math.ceil(elemets.length/PORTION_PAGES)).fill('')\r\n\r\n  const pagesElement = pages.map((item, index) => {\r\n   return  `<li class=\"page-item ${index===0 && 'active'}\"><a class=\"page-link\" href=\"#\">${index+1}</a></li>`\r\n  }).join(' ')\r\n\r\n  const wrapperPagination = `\r\n      <nav class=\"county_paginator\" aria-label=\"county_paginator\">\r\n        <ul class=\"pagination pagination-sm mt-2 col-md-6 mx-auto\">\r\n            ${pagesElement}\r\n        </ul>\r\n      </nav>\r\n  `\r\n  root.insertAdjacentHTML('afterbegin', wrapperPagination)\r\n\r\n  const pagesRef = root.querySelectorAll('.page-item')\r\n\r\n  pagesRef?.forEach(item => item.addEventListener('click', (e) =>\r\n    onChangePages(e, item, pagesRef,elemets, PORTION_PAGES, rootList)))\r\n\r\n};\r\n\r\n","import { elementsList } from './ElemetnsList';\r\n\r\nexport const onChangePages = (e, item, pagesRef, arr, PORTION_PAGES,rootList) => {\r\n  rootList.textContent = null\r\n\r\n const target = e.target\r\n  if (!target.classList.contains === 'page-item') return\r\n  pagesRef.forEach(page=> page.classList.remove('active'))\r\n  item.classList.add('active')\r\n  const value = parseInt(item.textContent)\r\n\r\n  const start = (value - 1)*PORTION_PAGES;\r\n  const end = start + PORTION_PAGES;\r\n\r\n\r\n\r\n  const pageShowArr = arr.slice(start,end)\r\n  elementsList(pageShowArr,rootList)\r\n\r\n}\r\n","\r\nconst root = document.querySelector('#root')\r\nexport const clearPaginator= () => {\r\n  const navNode = root.querySelector('.county_paginator')\r\n  if (navNode){\r\n    navNode.parentNode.removeChild(navNode)\r\n  }\r\n}\r\n","import './styles.scss';\nimport debounce from 'lodash/debounce';\nimport {fetchCountries} from './fetchCountries'\nimport {swalAlert} from './Component/swapAlert';\nimport { createTable } from './Component/CreateTable';\n\nconst rootList = document.querySelector('#root')\nconst rootLeft= document.querySelector('#root1')\nconst rootRight= document.querySelector('#root2')\nconst inputRef = document.querySelector('#country')\n\nconst onInput = (e) => {\n  const value =e.target.value.trim()\n\n  if (value.length === 0) {\n    const navNode = rootList.querySelector('.county_paginator')\n    if (navNode){\n      navNode.parentNode.removeChild(navNode)\n    }\n    rootLeft.innerHTML = ''\n    rootRight.innerHTML = ''\n    return\n  }\n\n  fetchCountries(value).then(res => {\n    rootLeft.innerHTML = ''\n    rootRight.innerHTML = ''\n    if (res.length > 0) {\n   createTable(res)\n    }\n  })\n    .catch((err) => {\n      if (err.message === 'Unexpected end of JSON input'){\n        rootLeft.innerHTML = ''\n        rootRight.innerHTML = ''\n        return\n      }\n      swalAlert(err.message)\n\n\n  })\n\n}\n\n\n\n\n\n\n\n\ninputRef.addEventListener(\n  'input',\n  debounce(onInput, 500),\n);\n\n","import { card } from './Card';\r\nimport { elementsList } from './ElemetnsList';\r\nimport { pagination } from './Pagitanation';\r\nimport { clearPaginator } from './clearPaginator';\r\n\r\n\r\nexport const createTable = (elements) => {\r\n  const rootList= document.querySelector('#root1')\r\n  rootList.innerHTML = null\r\n if (!Array.isArray(elements)) throw ('Something wrong')\r\n\r\n\r\n\r\n\r\n  if (elements.length>1 && elements.length < 10){\r\n    clearPaginator()\r\n    elementsList(elements, rootList)\r\n  }\r\n  if (elements.length > 10){\r\n    pagination(elements, rootList)\r\n  }\r\n  if(elements.length === 1){\r\n    clearPaginator()\r\n    card(elements)\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\n\r\n\r\nexport const swalAlert = (message) => {\r\n\r\n\r\n  Swal.fire({\r\n    icon: 'error',\r\n    title: 'Country is not found',\r\n    text: `Something went wrong! -  ${message}`,\r\n  })\r\n}\r\n"],"sourceRoot":""}